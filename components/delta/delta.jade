template(name='delta')
    .ui.stackable.padded.grid
        .row
            .eight.wide.right.aligned.column
                //- if is_admin
                .ui.inline.header
                    //- i.icon(class=icon)
                    //- +i name=icon
                    |posts
                unless is_loading
                    if currentUser
                        .ui.icon.large.basic.button.add_post(title="Add #{title}")
                            i.plus.large.icon
                        //- +i name='plus'
                    //- if can_edit
                        //- +edit_circular.button
                    //- if currentUser
                    //-     +user_list_toggle key='bookmark_ids' icon='bookmark' label='bookmark' color='red'
                    if is_dev
                        .ui.icon.large.basic.button.edit_model
                            i.large.cog.icon
                            //- +i name='settings'
                            //- | Configure #{plural}
                    // .ui.divider
                    // // each sessions
                    // //     .ui.icon.basic.button.select_session(class=session_selector_class title='select session')
                    // //         i.play.icon
                    if current_delta
                        if is_dev
                            .ui.icon.large.basic.button.print_delta(title='print session doc')
                                i.code.icon
                        .ui.reset.icon.basic.button(title='reload session')
                            i.refresh.icon
                        .ui.delete_delta.icon.basic.button(title='delete session')
                            i.trash.icon
                    else
                        .create_delta.ui.large.button(title='new session')
                            i.plus.icon
                            |session
                    if description
                        .ui.segment
                            |#{description}
                    //- if is_dev
                    //-     .ui.input
                    //-         input.import_subreddit(type='text' placeholder='import_subreddit')
                // |did: #{session_delta_id}
                div
                each sorted_facets
                    +facet
            .eight.wide.column
                //- .ui.inline.header
                //-     |sort by
                //- .ui.button
                //- .ui.stackable.four.column.grid
                //- .ui.three.stackable.cards
                each current_delta.result_ids
                    //- .column
                    +delta_result
                


template(name='facet')
    if filtering_res
        //- .ui.hidden.divider
        //- .ui.accordion
        //-     .active.title
        .ui.grey.inline.header 
            if icon
                //- i.small.icon(class=icon)
                +i name=icon classes='ui mini inline image'   
            if title
                |#{title}
            else 
                |#{key}
                //- i.dropdown.icon
            //- .active.content
        if is_admin
            .ui.icon.small.transparent.input
                i.search.icon
                input.add_filter(type='text')
        //- div
        each filtering_res
            if name
                .selector.ui.compact.button.toggle_selection(class=toggle_value_class)
                    strong #{name}
                    small #{cal_count} #{count}
                    //- if is_admin
            else
                .selector.ui.compact.button.toggle_selection(class=toggle_value_class)
                    strong [null]
                    //- small #{cal_count}
        .ui.hidden.divider

template(name='toggle_delta_config')
    if boolean_true
        .ui.grey.active.icon.button.disable_key(title=label)
            i.icon(class=icon)
            // | #{label}
    else
        .ui.icon.button.enable_key(title=label)
            i.icon(class=icon)
            // | #{label}



template(name='delta_result')
    with result 
        //- .ui.result.cloud.fluid.card(class=loading_class)
        .ui.result.stackable.grid.segment(class=loading_class)
            //- if image_id
            //-     .four.wide.column
            //-         img.ui.image(src="{{c.url image_id width=400 height=400 gravity='face' crop='fill'}}")
            .sixteen.wide.column
                .content
                    +textarea_view key='body' direct=true
                    +array_view key='tags' icon='tags' direct=true
                    +array_view key='location_tags' label='location tags' icon='marker' direct=true
                    +array_view key='date_tags' label='date tags' icon='posts' direct=true
                    +image_view key='image_id' direct=true
                    +user_list_toggle key='bookmark_ids' icon='bookmark' label='Bookmark' color='red'
                    if can_edit
                        +remove_button
                        a.ui.large.icon.basic.button(href="/post/#{_id}/edit" title='edit')
                            i.pencil.large.icon
                            //- |edit
                    a.ui.icon.large.basic.button(href="/post/#{_id}" title='view')
                        i.right.chevron.large.icon
                    if _author_id
                        +author_info
                    +creation_info
                +comments
                    //- +jsonView json=this_data
                    
                    
